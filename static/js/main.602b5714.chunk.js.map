{"version":3,"sources":["components/card-list/card-list.module.css","components/card/Card.module.css","components/SearchBox/SearchBox.module.css","components/card/Card.js","components/card-list/card-list.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","alt","src","monster","id","name","email","CardList","cardList","monsters","map","SearchBox","placeholder","handleChanged","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,SAAW,8B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,uMCgBfC,EAdF,SAACC,GACZ,OACE,sBAAKC,UAAWC,IAAQH,KAAxB,UACE,qBACEI,IAAI,UACJC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,4BAEL,6BAAKN,EAAMK,QAAQE,OACnB,4BAAIP,EAAMK,QAAQG,YCLXC,EAAW,SAACT,GACvB,OACE,qBAAKC,UAAWC,IAAQQ,SAAxB,SACGV,EAAMW,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,gBCGZO,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,OAChB,uBACEd,UAAWC,IAAQW,UACnBG,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC2CCG,E,kDA5Cb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAoBRe,cAAgB,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALE,E,gEAWE,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,OAAO,EAAKT,SAAS,CAAET,SAAUkB,S,+BAQ7B,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAkBpB,EAASqB,QAAO,SAAC3B,GAAD,OACtCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,cAAee,KAAKf,gBAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAvCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.602b5714.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"card-list_cardList__3x0hI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2t6ml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBox\":\"SearchBox_SearchBox__3oQNA\"};","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={classes.Card}>\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// into card list\r\nexport default Card;\r\n","import React from \"react\";\r\nimport classes from \"./card-list.module.css\";\r\n\r\nimport Card from \"../card/Card\";\r\n\r\n// into App\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className={classes.cardList}>\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./SearchBox.module.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChanged }) => (\r\n  <input\r\n    className={classes.SearchBox}\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChanged}\r\n  />\r\n);\r\n\r\n// into App\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { CardList } from \"./components/card-list/card-list\";\nimport SearchBox from \"./components/SearchBox/SearchBox\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n    // this.handleChanged = this.handleChanged.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        return this.setState({ monsters: users });\n      });\n  }\n\n  handleChanged = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChanged={this.handleChanged}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}